// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.7
// source: proto/license/certificate.proto

package license

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取的请求
type CerFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` // ID
}

func (x *CerFetchRequest) Reset() {
	*x = CerFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerFetchRequest) ProtoMessage() {}

func (x *CerFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerFetchRequest.ProtoReflect.Descriptor instead.
func (*CerFetchRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *CerFetchRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// 获取的回复
type CerFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态
	Cer    *CertificateEntity `protobuf:"bytes,2,opt,name=cer,proto3" json:"cer,omitempty"`       // 证书
}

func (x *CerFetchResponse) Reset() {
	*x = CerFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerFetchResponse) ProtoMessage() {}

func (x *CerFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerFetchResponse.ProtoReflect.Descriptor instead.
func (*CerFetchResponse) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{1}
}

func (x *CerFetchResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CerFetchResponse) GetCer() *CertificateEntity {
	if x != nil {
		return x.Cer
	}
	return nil
}

// 拉取的请求
type CerPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space    string `protobuf:"bytes,1,opt,name=space,proto3" json:"space,omitempty"`       // 空间名
	Consumer string `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"` // 消费者
}

func (x *CerPullRequest) Reset() {
	*x = CerPullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerPullRequest) ProtoMessage() {}

func (x *CerPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerPullRequest.ProtoReflect.Descriptor instead.
func (*CerPullRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{2}
}

func (x *CerPullRequest) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *CerPullRequest) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

// 拉取的回复
type CerPullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态
	Cer    *CertificateEntity `protobuf:"bytes,2,opt,name=cer,proto3" json:"cer,omitempty"`       // 证书
}

func (x *CerPullResponse) Reset() {
	*x = CerPullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerPullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerPullResponse) ProtoMessage() {}

func (x *CerPullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerPullResponse.ProtoReflect.Descriptor instead.
func (*CerPullResponse) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{3}
}

func (x *CerPullResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CerPullResponse) GetCer() *CertificateEntity {
	if x != nil {
		return x.Cer
	}
	return nil
}

// 列举的请求
type CerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // 偏移值
	Count  int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`   // 数量
	Space  string `protobuf:"bytes,3,opt,name=space,proto3" json:"space,omitempty"`    // 空间名
}

func (x *CerListRequest) Reset() {
	*x = CerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerListRequest) ProtoMessage() {}

func (x *CerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerListRequest.ProtoReflect.Descriptor instead.
func (*CerListRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{4}
}

func (x *CerListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CerListRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CerListRequest) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

// 列举的回复
type CerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态
	Total  int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`  //持久化的总数
	Cer    []*CertificateEntity `protobuf:"bytes,3,rep,name=cer,proto3" json:"cer,omitempty"`       // 证书的列表
}

func (x *CerListResponse) Reset() {
	*x = CerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_certificate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CerListResponse) ProtoMessage() {}

func (x *CerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_certificate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CerListResponse.ProtoReflect.Descriptor instead.
func (*CerListResponse) Descriptor() ([]byte, []int) {
	return file_proto_license_certificate_proto_rawDescGZIP(), []int{5}
}

func (x *CerListResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CerListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CerListResponse) GetCer() []*CertificateEntity {
	if x != nil {
		return x.Cer
	}
	return nil
}

var File_proto_license_certificate_proto protoreflect.FileDescriptor

var file_proto_license_certificate_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2f,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a,
	0x0f, 0x43, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x59, 0x0a, 0x10, 0x43, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x63, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x03, 0x63, 0x65, 0x72, 0x22, 0x42, 0x0a,
	0x0e, 0x43, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x22, 0x58, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x63, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x03, 0x63, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x0e, 0x43,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x6e, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x03, 0x63,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x03, 0x63, 0x65,
	0x72, 0x32, 0x97, 0x01, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x10, 0x2e, 0x43, 0x65, 0x72,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x43,
	0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x43, 0x65, 0x72, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x43, 0x65, 0x72,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x43, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x43, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x3b, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_license_certificate_proto_rawDescOnce sync.Once
	file_proto_license_certificate_proto_rawDescData = file_proto_license_certificate_proto_rawDesc
)

func file_proto_license_certificate_proto_rawDescGZIP() []byte {
	file_proto_license_certificate_proto_rawDescOnce.Do(func() {
		file_proto_license_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_license_certificate_proto_rawDescData)
	})
	return file_proto_license_certificate_proto_rawDescData
}

var file_proto_license_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_license_certificate_proto_goTypes = []interface{}{
	(*CerFetchRequest)(nil),   // 0: CerFetchRequest
	(*CerFetchResponse)(nil),  // 1: CerFetchResponse
	(*CerPullRequest)(nil),    // 2: CerPullRequest
	(*CerPullResponse)(nil),   // 3: CerPullResponse
	(*CerListRequest)(nil),    // 4: CerListRequest
	(*CerListResponse)(nil),   // 5: CerListResponse
	(*Status)(nil),            // 6: Status
	(*CertificateEntity)(nil), // 7: CertificateEntity
}
var file_proto_license_certificate_proto_depIdxs = []int32{
	6, // 0: CerFetchResponse.status:type_name -> Status
	7, // 1: CerFetchResponse.cer:type_name -> CertificateEntity
	6, // 2: CerPullResponse.status:type_name -> Status
	7, // 3: CerPullResponse.cer:type_name -> CertificateEntity
	6, // 4: CerListResponse.status:type_name -> Status
	7, // 5: CerListResponse.cer:type_name -> CertificateEntity
	0, // 6: Certificate.Fetch:input_type -> CerFetchRequest
	2, // 7: Certificate.Pull:input_type -> CerPullRequest
	4, // 8: Certificate.List:input_type -> CerListRequest
	1, // 9: Certificate.Fetch:output_type -> CerFetchResponse
	3, // 10: Certificate.Pull:output_type -> CerPullResponse
	5, // 11: Certificate.List:output_type -> CerListResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_license_certificate_proto_init() }
func file_proto_license_certificate_proto_init() {
	if File_proto_license_certificate_proto != nil {
		return
	}
	file_proto_license_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_license_certificate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_certificate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_certificate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerPullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_certificate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerPullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_certificate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_certificate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_license_certificate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_license_certificate_proto_goTypes,
		DependencyIndexes: file_proto_license_certificate_proto_depIdxs,
		MessageInfos:      file_proto_license_certificate_proto_msgTypes,
	}.Build()
	File_proto_license_certificate_proto = out.File
	file_proto_license_certificate_proto_rawDesc = nil
	file_proto_license_certificate_proto_goTypes = nil
	file_proto_license_certificate_proto_depIdxs = nil
}
