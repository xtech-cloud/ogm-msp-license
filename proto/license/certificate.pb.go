// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/license/certificate.proto

package license

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 获取的请求
type CerFetchRequest struct {
	Consumer             int32    `protobuf:"varint,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CerFetchRequest) Reset()         { *m = CerFetchRequest{} }
func (m *CerFetchRequest) String() string { return proto.CompactTextString(m) }
func (*CerFetchRequest) ProtoMessage()    {}
func (*CerFetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a45a2be42a86bdaa, []int{0}
}

func (m *CerFetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CerFetchRequest.Unmarshal(m, b)
}
func (m *CerFetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CerFetchRequest.Marshal(b, m, deterministic)
}
func (m *CerFetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CerFetchRequest.Merge(m, src)
}
func (m *CerFetchRequest) XXX_Size() int {
	return xxx_messageInfo_CerFetchRequest.Size(m)
}
func (m *CerFetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CerFetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CerFetchRequest proto.InternalMessageInfo

func (m *CerFetchRequest) GetConsumer() int32 {
	if m != nil {
		return m.Consumer
	}
	return 0
}

// 获取的回复
type CerFetchResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CerFetchResponse) Reset()         { *m = CerFetchResponse{} }
func (m *CerFetchResponse) String() string { return proto.CompactTextString(m) }
func (*CerFetchResponse) ProtoMessage()    {}
func (*CerFetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a45a2be42a86bdaa, []int{1}
}

func (m *CerFetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CerFetchResponse.Unmarshal(m, b)
}
func (m *CerFetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CerFetchResponse.Marshal(b, m, deterministic)
}
func (m *CerFetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CerFetchResponse.Merge(m, src)
}
func (m *CerFetchResponse) XXX_Size() int {
	return xxx_messageInfo_CerFetchResponse.Size(m)
}
func (m *CerFetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CerFetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CerFetchResponse proto.InternalMessageInfo

func (m *CerFetchResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CerFetchResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*CerFetchRequest)(nil), "license.CerFetchRequest")
	proto.RegisterType((*CerFetchResponse)(nil), "license.CerFetchResponse")
}

func init() {
	proto.RegisterFile("proto/license/certificate.proto", fileDescriptor_a45a2be42a86bdaa)
}

var fileDescriptor_a45a2be42a86bdaa = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x41, 0x4f, 0x84, 0x30,
	0x10, 0x85, 0xc5, 0x04, 0xd0, 0xe1, 0x80, 0xe9, 0xa9, 0xf6, 0x22, 0xe1, 0x22, 0x17, 0x21, 0xc1,
	0xbb, 0x17, 0x12, 0x6f, 0x5e, 0x6a, 0xfc, 0x01, 0x58, 0xc7, 0x40, 0xa2, 0x2d, 0xdb, 0x19, 0xfe,
	0xff, 0x26, 0x85, 0x85, 0xec, 0x66, 0x8f, 0xaf, 0xdf, 0x97, 0xbe, 0x37, 0xf0, 0x34, 0x79, 0xc7,
	0xae, 0xf9, 0x1b, 0x0d, 0x5a, 0xc2, 0xc6, 0xa0, 0xe7, 0xf1, 0x77, 0x34, 0x3d, 0x63, 0x1d, 0x88,
	0x48, 0x57, 0xa4, 0xd4, 0xb9, 0x49, 0x43, 0xef, 0xf1, 0x67, 0x91, 0xca, 0x17, 0xc8, 0x3b, 0xf4,
	0xef, 0xc8, 0x66, 0xd0, 0x78, 0x98, 0x91, 0x58, 0x28, 0xb8, 0x33, 0xce, 0xd2, 0xfc, 0x8f, 0x5e,
	0x46, 0x45, 0x54, 0xc5, 0x7a, 0xcb, 0xe5, 0x17, 0x3c, 0xec, 0x3a, 0x4d, 0xce, 0x12, 0x8a, 0x67,
	0x48, 0x88, 0x7b, 0x9e, 0x29, 0xd8, 0x59, 0x9b, 0xd7, 0x6b, 0x53, 0xfd, 0x19, 0x9e, 0xf5, 0x8a,
	0x85, 0x84, 0xd4, 0x38, 0xcb, 0x68, 0x59, 0xde, 0x16, 0x51, 0x75, 0xaf, 0x4f, 0xb1, 0xfd, 0x80,
	0xac, 0xdb, 0xf7, 0x8b, 0x37, 0x88, 0x43, 0x85, 0x90, 0xdb, 0x57, 0x17, 0x23, 0xd5, 0xe3, 0x15,
	0xb2, 0xec, 0x29, 0x6f, 0xbe, 0x93, 0x70, 0xdb, 0xeb, 0x31, 0x00, 0x00, 0xff, 0xff, 0x73, 0x28,
	0x1d, 0x9f, 0x23, 0x01, 0x00, 0x00,
}
